TypeScript
	- typeScript is better version of javaScript, ts has more feature then js
	- ts give us type sefty
	- Node js is responsible for converting ts code into js becouse browser can run only Javascript Code not typeScript code.
	
	ex js 
	var a = 10;
	var a = "akash"    valid
	
	ex in ts 
	var a = 10;
	a = "akash"        not valid
-----------------------------------------install typeScript-------------------------------------
use command : sudo npm i typescript -g (it will install typeScript compiler)
---------------------------------------------------array and Tuple---------------------------------------------
let arr = [1,2,3,4,5,6, "Akash"];  <--- array
let arr:[string, number] = ["Akash",1234]   <----Tuple      (Accept only fixed type)

------------------------------------------------------------------------------------------
Any 
let a; <---- By default Type is any

let a:number;      <----- Allow only number

------------------------------------------------------------------------------------------
Type inference means ts automatically check type for ex :-
let a = 12; 		<----- Type Inference
let a: number;      <----- annotation
let a: number | boolean | string;  <-- it can contain any of the type
-----------------------------------------------Interface-------------------------------------------
interface User{
	name: string,
	email: string,
	password: string
	}
	
	function getDataOfUser(obj: User)       <----- obj is type of User
	{}
	
	
	interface Admin extends User            <------ Extend interface
	{
		admin:boolean
	}
-----------------------------------------------Alias-------------------------------------------
type value = string | number | null;

let a : value = 10;      (value == string | number | null;)

--------------------------------------------Classes and Object--------------------------------------------------
Classes and Object

class Device{
	name ='lg';
	price = 12000;
	category = ''digital;
	} 
	
#Constructor:

	class BottleMaker
	{
	public brand;
	public price;
	public color;
	public material;
		constructor(brand: string, price: number, color:string, material:string)
		{
			this.brand = brand;
			this.price = price;
			this.color = color;
			this.material = material;
		}
	}
	
	--------------------------in TypeScript --------------------
	class BottleMaker{
		constructor(public brand: string, public price: number,public color:string, public material:string)
	}
	
	-object Creation
	let b1 = new BottleMaker("Milton",1200,"yellow","metal");
	
--------------------------------------------Readonly and nullable--------------------------------------------------------------------------------------	
		class BottleMaker{
		constructor(public readonly brand?: string, public price: number,public color:string, public material:string)
		
	}
----------------------------------------getter setter----------------------------------------------
	class user{
		constructor(public Myname: string){}
		
		get name(){
			return this.Myname;
		}
		set name(value:string){
			this.Myname = value;
		}
----------------------------------------------Static----------------------------------------------
	class test{
		static version = 1.0;
		static function(){
		 return Math.random();
		 }
	}
---------------------------------------------Function-----------------------------------------------
function abcd: returnType{
	return value;
}
---------------------------------------------Rest/spread oprater---------------------------------------------
function sum(...arr : number[]){
	console.log(arr);
}
sum(1,2,3,5,4,7,8);
----------------------------------
function sum(...arr : string[]){
	console.log(arr[0]);                //Akash
}
sum("Akash","Pranay","Vaibhav","anil");
----------------------------------
var arr = [1,2,34,5,6,];
var arr2 = [...arr];   //copy of arr;
---------------------------------------------type guards(typeof)--------------------------------
function abcd(arg:string | number){
	if(typeof arg ==="number"){
		return "number";
	}
	else if(typeof arg ==="string"){
		return "string";
	}
}